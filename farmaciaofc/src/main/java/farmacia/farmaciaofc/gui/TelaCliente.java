/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package farmacia.farmaciaofc.gui;

import farmacia.farmaciaofc.dao.ClienteDAO;
import farmacia.farmaciaofc.dto.ClienteDTO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author talit
 */
public class TelaCliente extends javax.swing.JFrame {



private ClienteDAO ClienteDao;
    
//    Connection conexao = null;

    /**
     * Creates new form TelaProduto
     */
   
    public TelaCliente() {
        initComponents();
         ClienteDao = new ClienteDAO();
        listarClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIDClientes = new javax.swing.JScrollPane();
        txtIDCliente = new javax.swing.JTextPane();
        txtNomee = new javax.swing.JScrollPane();
        txtNome = new javax.swing.JTextPane();
        txtCupomm = new javax.swing.JScrollPane();
        txtCupom = new javax.swing.JTextPane();
        txtQTDD = new javax.swing.JScrollPane();
        txtQTD = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CADASTRARCLIENTES = new javax.swing.JButton();
        ATUALIZARCLIENTES = new javax.swing.JButton();
        EXCLUIRCLIENTES = new javax.swing.JButton();
        CARREGARCAMPOSCLIENTES = new javax.swing.JButton();
        tbDados = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setText("FARM√ÅCIAS GASA");

        txtIDClientes.setViewportView(txtIDCliente);

        txtNomee.setViewportView(txtNome);

        txtCupomm.setViewportView(txtCupom);

        txtQTDD.setViewportView(txtQTD);

        jLabel2.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel2.setText("IDCliente:");

        jLabel3.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel3.setText("Nome:");

        jLabel4.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel4.setText("Cupom:");

        jLabel5.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel5.setText("QTDProdutos_Comprados:");

        CADASTRARCLIENTES.setBackground(new java.awt.Color(255, 204, 204));
        CADASTRARCLIENTES.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        CADASTRARCLIENTES.setForeground(new java.awt.Color(0, 0, 0));
        CADASTRARCLIENTES.setText("CADASTRAR");
        CADASTRARCLIENTES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CADASTRARCLIENTESActionPerformed(evt);
            }
        });

        ATUALIZARCLIENTES.setBackground(new java.awt.Color(255, 204, 204));
        ATUALIZARCLIENTES.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        ATUALIZARCLIENTES.setForeground(new java.awt.Color(0, 0, 0));
        ATUALIZARCLIENTES.setText("ATUALIZAR");
        ATUALIZARCLIENTES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ATUALIZARCLIENTESActionPerformed(evt);
            }
        });

        EXCLUIRCLIENTES.setBackground(new java.awt.Color(255, 204, 204));
        EXCLUIRCLIENTES.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        EXCLUIRCLIENTES.setForeground(new java.awt.Color(0, 0, 0));
        EXCLUIRCLIENTES.setText("EXCLUIR");
        EXCLUIRCLIENTES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXCLUIRCLIENTESActionPerformed(evt);
            }
        });

        CARREGARCAMPOSCLIENTES.setBackground(new java.awt.Color(255, 204, 204));
        CARREGARCAMPOSCLIENTES.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        CARREGARCAMPOSCLIENTES.setForeground(new java.awt.Color(0, 0, 0));
        CARREGARCAMPOSCLIENTES.setText("CARREGAR CAMPOS");
        CARREGARCAMPOSCLIENTES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CARREGARCAMPOSCLIENTESActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "IDCliente", "NOME", "CUPOM", "QTDProdutos_Comprados"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbDados.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIDClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtQTDD, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtNomee, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCupomm, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CADASTRARCLIENTES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ATUALIZARCLIENTES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EXCLUIRCLIENTES)
                        .addGap(18, 18, 18)
                        .addComponent(CARREGARCAMPOSCLIENTES))
                    .addComponent(tbDados, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CADASTRARCLIENTES)
                                .addComponent(ATUALIZARCLIENTES)
                                .addComponent(EXCLUIRCLIENTES)
                                .addComponent(CARREGARCAMPOSCLIENTES))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(9, 9, 9)
                                .addComponent(txtIDClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNomee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtQTDD, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtCupomm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tbDados, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CADASTRARCLIENTESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CADASTRARCLIENTESActionPerformed
        // TODO add your handling code here:
        inserirCliente();
        limparCampos();
        listarClientes();
    }//GEN-LAST:event_CADASTRARCLIENTESActionPerformed

    private void ATUALIZARCLIENTESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ATUALIZARCLIENTESActionPerformed
        // TODO add your handling code here:
        alterarCliente();
        listarClientes();
        limparCampos();
    
    }//GEN-LAST:event_ATUALIZARCLIENTESActionPerformed

    private void CARREGARCAMPOSCLIENTESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CARREGARCAMPOSCLIENTESActionPerformed
        // TODO add your handling code here:
        carregarCampos();
    }//GEN-LAST:event_CARREGARCAMPOSCLIENTESActionPerformed

    private void EXCLUIRCLIENTESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXCLUIRCLIENTESActionPerformed
        // TODO add your handling code here:
        excluirCliente();
        listarClientes();
        limparCampos();
    }//GEN-LAST:event_EXCLUIRCLIENTESActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ATUALIZARCLIENTES;
    private javax.swing.JButton CADASTRARCLIENTES;
    private javax.swing.JButton CARREGARCAMPOSCLIENTES;
    private javax.swing.JButton EXCLUIRCLIENTES;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JTable jTable1;
    private javax.swing.JScrollPane tbDados;
    private javax.swing.JTextPane txtCupom;
    private javax.swing.JScrollPane txtCupomm;
    private javax.swing.JTextPane txtIDCliente;
    private javax.swing.JScrollPane txtIDClientes;
    private javax.swing.JTextPane txtNome;
    private javax.swing.JScrollPane txtNomee;
    private javax.swing.JTextPane txtQTD;
    private javax.swing.JScrollPane txtQTDD;
    // End of variables declaration//GEN-END:variables
private void inserirCliente() {
        // Dados inseridos pelo usu√°rio no formul√°rio.
        String nome = txtNome.getText();
        String cupom = txtCupom.getText();
       
        
        try {
            // Convertendo os dados inseridos no formul√°rio.
          
            String Nome = String.valueOf(txtNome.getText());
            String Cupom = String.valueOf(txtCupom.getText());
            int IDCliente = Integer.parseInt(txtIDCliente.getText());
            int qtdprodutos_comprados = Integer.parseInt(txtQTD.getText());

            // Cria um novo objeto da classe ProdutoDTO
            ClienteDTO novoCliente = new ClienteDTO(IDCliente, Nome, Cupom, qtdprodutos_comprados);

            // Inserir dados no banco atrav√©s do m√©todo da Classe ProdutoDAO (adicionarProduto).
            ClienteDao.adicionarCliente(novoCliente);
            JOptionPane.showMessageDialog(null, "Cliente adicionado com sucesso.");
            limparCampos();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Dados inv√°lidos!", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    // Fun√ß√£o para limpar os campos JTextField
    public void limparCampos() {
        txtIDCliente.setText(null);
        txtNome.setText(null);
        txtCupom.setText(null);
        txtQTD.setText(null);
        txtNome.requestFocus();
    }

    // M√©todo para listar os produtos.
    private void listarClientes() {
        try {
            List<ClienteDTO> clientes = ClienteDao.listarClientes();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);

            // Inserir os dados na Jtable
            for (ClienteDTO cliente : clientes) {
                Object[] rowData = {
                    cliente.getIDCliente(), cliente.getNome(), cliente.getCupom(), cliente.getqtdprodutos_comprados()};
                model.addRow(rowData);
            }

        } catch (Exception e) {
            
        }

    }
    private void alterarCliente() {

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            int idcliente = (int) jTable1.getValueAt(selectedRow, 0);
            String nome = txtNome.getText();

            try {
                // Recebendo e convertendo os dados inseridos no formul√°rio.
                String Nome = String.valueOf(txtNome.getText());
                String Cupom = String.valueOf(txtCupom.getText());
                int IDCliente = Integer.parseInt(txtIDCliente.getText());
                int qtdprodutos_comprados = Integer.parseInt(txtQTD.getText());

                // Cria um novo objeto da classe ProdutoDTO
                ClienteDTO clienteAtualizado = new ClienteDTO(IDCliente, Nome, Cupom, qtdprodutos_comprados);

                // Inserir dados no banco atrav√©s do m√©todo da Classe ProdutoDAO (adicionarProduto).
                ClienteDao.atualizarCliente (clienteAtualizado);
                JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso.");

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Dados inv√°lidos!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Cliente para atualizar.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }

    }
    
    private void carregarCampos() {
        int setar = jTable1.getSelectedRow();

        txtIDCliente.setText(jTable1.getModel().getValueAt(setar, 1).toString());
        txtNome.setText(jTable1.getModel().getValueAt(setar, 2).toString());
        txtCupom.setText(jTable1.getModel().getValueAt(setar, 3).toString());
        txtQTD.setText(jTable1.getModel().getValueAt(setar, 3).toString());

    }
    
    private void excluirCliente() {

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            int IDCliente = (int) jTable1.getValueAt(selectedRow, 0);
            int confirmacao = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir este produto?", "Confirma√ß√£o", JOptionPane.YES_NO_OPTION);

            if (confirmacao == JOptionPane.YES_OPTION) {
                ClienteDao.excluirCliente(IDCliente);
                //atualizarTabela();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um produto para excluir.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }
}
